<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ConnectionString (Settings)" PropertyReference="ApplicationSettings.PraktukaSQL.Properties.Settings.GlobalReference.Default.ConnectionString" Provider="Devart.Data.SQLite" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LectorsTableAdapter" GeneratorDataComponentClassName="LectorsTableAdapter" Name="Lectors" UserDataComponentName="LectorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConnectionString (Settings)" DbObjectName="&quot;main&quot;.Lectors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM "main"."Lectors" WHERE (("IDlectors" = :Original_IDlectors) AND ("Firstname" = :Original_Firstname) AND ("Name" = :Original_Name) AND ("IDnamber" = :Original_IDnamber))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDlectors" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDlectors" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Firstname" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDnamber" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDnamber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO "main"."Lectors" ("IDlectors", "Firstname", "Name", "IDnamber") VALUES (:IDlectors, :Firstname, :Name, :IDnamber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDlectors" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDlectors" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Firstname" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDnamber" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDnamber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDlectors, Firstname, Name, IDnamber FROM "main".Lectors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE "main"."Lectors" SET "IDlectors" = :IDlectors, "Firstname" = :Firstname, "Name" = :Name, "IDnamber" = :IDnamber WHERE (("IDlectors" = :Original_IDlectors) AND ("Firstname" = :Original_Firstname) AND ("Name" = :Original_Name) AND ("IDnamber" = :Original_IDnamber))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDlectors" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDlectors" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Firstname" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDnamber" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDnamber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDlectors" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDlectors" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Firstname" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDnamber" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDnamber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDlectors" DataSetColumn="IDlectors" />
              <Mapping SourceColumn="Firstname" DataSetColumn="Firstname" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="IDnamber" DataSetColumn="IDnamber" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConnectionString (Settings)" DbObjectName="&quot;main&quot;.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM "main"."Students" WHERE (("IDstudent" = :Original_IDstudent) AND ("Firstname" = :Original_Firstname) AND ("Name" = :Original_Name) AND ("IDnumber" = :Original_IDnumber))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Firstname" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDnumber" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDnumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO "main"."Students" ("IDstudent", "Firstname", "Name", "IDnumber") VALUES (:IDstudent, :Firstname, :Name, :IDnumber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Firstname" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDnumber" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDnumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDstudent, Firstname, Name, IDnumber FROM "main".Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE "main"."Students" SET "IDstudent" = :IDstudent, "Firstname" = :Firstname, "Name" = :Name, "IDnumber" = :IDnumber WHERE (("IDstudent" = :Original_IDstudent) AND ("Firstname" = :Original_Firstname) AND ("Name" = :Original_Name) AND ("IDnumber" = :Original_IDnumber))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Firstname" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDnumber" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDnumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Firstname" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDnumber" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDnumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDstudent" DataSetColumn="IDstudent" />
              <Mapping SourceColumn="Firstname" DataSetColumn="Firstname" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="IDnumber" DataSetColumn="IDnumber" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ConnectionString (Settings)" DbObjectName="&quot;main&quot;.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDstudent, Firstname, Name, IDnumber FROM "main".Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ConnectionString (Settings)" DbObjectName="&quot;main&quot;.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        IDstudent, Firstname, Name, IDnumber
FROM            Students
WHERE        (IDstudent LIKE :IDstudent) OR
                         (Firstname LIKE :Firstname)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="IDstudent" ColumnName="IDstudent" DataSourceName="&quot;main&quot;.Students" DataTypeServer="TEXT" DbType="String" Direction="Input" ParameterName="IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="2147483647" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Firstname" ColumnName="Firstname" DataSourceName="&quot;main&quot;.Students" DataTypeServer="TEXT" DbType="String" Direction="Input" ParameterName="Firstname" Precision="0" ProviderType="Text" Scale="0" Size="2147483647" SourceColumn="Firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TutorialTableAdapter" GeneratorDataComponentClassName="TutorialTableAdapter" Name="Tutorial" UserDataComponentName="TutorialTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConnectionString (Settings)" DbObjectName="&quot;main&quot;.Tutorial" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM "main"."Tutorial" WHERE (("IDkyrsu" = :Original_IDkyrsu) AND ("IDstudent" = :Original_IDstudent) AND ("IDlectors" = :Original_IDlectors) AND ("Namekurs" = :Original_Namekurs) AND ("Money" = :Original_Money))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDkyrsu" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDkyrsu" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDlectors" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDlectors" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Namekurs" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Namekurs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Money" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO "main"."Tutorial" ("IDkyrsu", "IDstudent", "IDlectors", "Namekurs", "Money") VALUES (:IDkyrsu, :IDstudent, :IDlectors, :Namekurs, :Money)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDkyrsu" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDkyrsu" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDlectors" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDlectors" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Namekurs" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Namekurs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Money" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDkyrsu, IDstudent, IDlectors, Namekurs, Money FROM "main".Tutorial</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE "main"."Tutorial" SET "IDkyrsu" = :IDkyrsu, "IDstudent" = :IDstudent, "IDlectors" = :IDlectors, "Namekurs" = :Namekurs, "Money" = :Money WHERE (("IDkyrsu" = :Original_IDkyrsu) AND ("IDstudent" = :Original_IDstudent) AND ("IDlectors" = :Original_IDlectors) AND ("Namekurs" = :Original_Namekurs) AND ("Money" = :Original_Money))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDkyrsu" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDkyrsu" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="IDlectors" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDlectors" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Namekurs" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Namekurs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Money" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDkyrsu" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDkyrsu" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDstudent" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDstudent" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_IDlectors" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="IDlectors" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Namekurs" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Namekurs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Money" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Money" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDkyrsu" DataSetColumn="IDkyrsu" />
              <Mapping SourceColumn="IDstudent" DataSetColumn="IDstudent" />
              <Mapping SourceColumn="IDlectors" DataSetColumn="IDlectors" />
              <Mapping SourceColumn="Namekurs" DataSetColumn="Namekurs" />
              <Mapping SourceColumn="Money" DataSetColumn="Money" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Lectors" msprop:Generator_TableClassName="LectorsDataTable" msprop:Generator_TableVarName="tableLectors" msprop:Generator_RowChangedName="LectorsRowChanged" msprop:Generator_TablePropName="Lectors" msprop:Generator_RowDeletingName="LectorsRowDeleting" msprop:Generator_RowChangingName="LectorsRowChanging" msprop:Generator_RowEvHandlerName="LectorsRowChangeEventHandler" msprop:Generator_RowDeletedName="LectorsRowDeleted" msprop:Generator_RowClassName="LectorsRow" msprop:Generator_UserTableName="Lectors" msprop:Generator_RowEvArgName="LectorsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDlectors" msprop:Generator_ColumnVarNameInTable="columnIDlectors" msprop:Generator_ColumnPropNameInRow="IDlectors" msprop:Generator_ColumnPropNameInTable="IDlectorsColumn" msprop:Generator_UserColumnName="IDlectors" type="xs:string" />
              <xs:element name="Firstname" msprop:Generator_ColumnVarNameInTable="columnFirstname" msprop:Generator_ColumnPropNameInRow="Firstname" msprop:Generator_ColumnPropNameInTable="FirstnameColumn" msprop:Generator_UserColumnName="Firstname" type="xs:string" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" type="xs:string" />
              <xs:element name="IDnamber" msprop:Generator_ColumnVarNameInTable="columnIDnamber" msprop:Generator_ColumnPropNameInRow="IDnamber" msprop:Generator_ColumnPropNameInTable="IDnamberColumn" msprop:Generator_UserColumnName="IDnamber" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_TableVarName="tableStudents" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_TablePropName="Students" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_RowClassName="StudentsRow" msprop:Generator_UserTableName="Students" msprop:Generator_RowEvArgName="StudentsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDstudent" msprop:Generator_ColumnVarNameInTable="columnIDstudent" msprop:Generator_ColumnPropNameInRow="IDstudent" msprop:Generator_ColumnPropNameInTable="IDstudentColumn" msprop:Generator_UserColumnName="IDstudent" type="xs:string" />
              <xs:element name="Firstname" msprop:Generator_ColumnVarNameInTable="columnFirstname" msprop:Generator_ColumnPropNameInRow="Firstname" msprop:Generator_ColumnPropNameInTable="FirstnameColumn" msprop:Generator_UserColumnName="Firstname" type="xs:string" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" type="xs:string" />
              <xs:element name="IDnumber" msprop:Generator_ColumnVarNameInTable="columnIDnumber" msprop:Generator_ColumnPropNameInRow="IDnumber" msprop:Generator_ColumnPropNameInTable="IDnumberColumn" msprop:Generator_UserColumnName="IDnumber" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tutorial" msprop:Generator_TableClassName="TutorialDataTable" msprop:Generator_TableVarName="tableTutorial" msprop:Generator_RowChangedName="TutorialRowChanged" msprop:Generator_TablePropName="Tutorial" msprop:Generator_RowDeletingName="TutorialRowDeleting" msprop:Generator_RowChangingName="TutorialRowChanging" msprop:Generator_RowEvHandlerName="TutorialRowChangeEventHandler" msprop:Generator_RowDeletedName="TutorialRowDeleted" msprop:Generator_RowClassName="TutorialRow" msprop:Generator_UserTableName="Tutorial" msprop:Generator_RowEvArgName="TutorialRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDkyrsu" msprop:Generator_ColumnVarNameInTable="columnIDkyrsu" msprop:Generator_ColumnPropNameInRow="IDkyrsu" msprop:Generator_ColumnPropNameInTable="IDkyrsuColumn" msprop:Generator_UserColumnName="IDkyrsu" type="xs:string" />
              <xs:element name="IDstudent" msprop:Generator_ColumnVarNameInTable="columnIDstudent" msprop:Generator_ColumnPropNameInRow="IDstudent" msprop:Generator_ColumnPropNameInTable="IDstudentColumn" msprop:Generator_UserColumnName="IDstudent" type="xs:string" />
              <xs:element name="IDlectors" msprop:Generator_ColumnVarNameInTable="columnIDlectors" msprop:Generator_ColumnPropNameInRow="IDlectors" msprop:Generator_ColumnPropNameInTable="IDlectorsColumn" msprop:Generator_UserColumnName="IDlectors" type="xs:string" />
              <xs:element name="Namekurs" msprop:Generator_ColumnVarNameInTable="columnNamekurs" msprop:Generator_ColumnPropNameInRow="Namekurs" msprop:Generator_ColumnPropNameInTable="NamekursColumn" msprop:Generator_UserColumnName="Namekurs" type="xs:string" />
              <xs:element name="Money" msprop:Generator_ColumnVarNameInTable="columnMoney" msprop:Generator_ColumnPropNameInRow="Money" msprop:Generator_ColumnPropNameInTable="MoneyColumn" msprop:Generator_UserColumnName="Money" type="xs:string" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Lectors" />
      <xs:field xpath="mstns:IDlectors" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:IDstudent" />
    </xs:unique>
    <xs:unique name="Tutorial_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tutorial" />
      <xs:field xpath="mstns:IDkyrsu" />
    </xs:unique>
  </xs:element>
</xs:schema>